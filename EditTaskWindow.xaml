<Window x:Class="TodoListApp.EditTaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="✏️ Chỉnh sửa Công việc"
        Height="600" 
        Width="520"
        MinHeight="500"
        MaxHeight="750"
        MinWidth="450"
        WindowStartupLocation="CenterOwner"
        Background="Transparent"
        ResizeMode="CanResize"
        AllowsTransparency="True"
        WindowStyle="None"
        BorderBrush="#FF2196F3"
        BorderThickness="2">

    <Window.Effect>
        <DropShadowEffect BlurRadius="15" ShadowDepth="5" Opacity="0.3" Color="#888"/>
    </Window.Effect>

    <Window.Resources>
        <!-- Gradient Background cho Header -->
        <LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#FF2196F3" Offset="0"/>
            <GradientStop Color="#FF1976D2" Offset="1"/>
        </LinearGradientBrush>

        <!-- Style cho Border input với hiệu ứng hover -->
        <Style x:Key="InputBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="0,4,0,16"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.1" Color="#AAA"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="#FF2196F3" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)"
                                                 To="0.3" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="#E0E0E0" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)"
                                                 To="0.1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style cho TextBox với hiệu ứng focus -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Style cho Button với hiệu ứng nâng cao -->
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="#FF2196F3"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="8,0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF1976D2"/>
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF0D47A1"/>
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style cho Cancel Button -->
        <Style x:Key="CancelButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="#F5F5F5"/>
            <Setter Property="Foreground" Value="#666"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E0E0E0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#CCCCCC"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style cho Label -->
        <Style x:Key="FormLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,12,0,6"/>
            <Setter Property="Foreground" Value="#444"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <!-- Style cho CheckBox với hiệu ứng đẹp -->
        <Style x:Key="ModernCheckBox" TargetType="CheckBox">
            <Setter Property="Margin" Value="0,8"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="#555"/>
        </Style>

        <!-- Style cho ComboBox -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="6"/>
                            <ToggleButton x:Name="toggleButton" 
                                          Background="Transparent" 
                                          BorderBrush="Transparent" 
                                          BorderThickness="0" 
                                          HorizontalContentAlignment="Right" 
                                          VerticalContentAlignment="Center"/>
                            <ContentPresenter x:Name="contentPresenter" 
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsHitTestVisible="false" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" 
                                   Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border x:Name="dropDownBorder" 
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                        BorderThickness="1" 
                                        CornerRadius="6">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border Background="White" CornerRadius="12">
        <Grid Margin="25">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!-- Header -->
                <RowDefinition Height="*"/>
                <!-- Content với ScrollViewer -->
                <RowDefinition Height="Auto"/>
                <!-- Buttons -->
            </Grid.RowDefinitions>

            <!-- Header với khả năng di chuyển cửa sổ -->
            <Grid Grid.Row="0" Margin="0,0,0,20" 
                  MouseLeftButtonDown="Header_MouseLeftButtonDown">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#FF2196F3" Offset="0"/>
                        <GradientStop Color="#FF1976D2" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="✏️ Chỉnh sửa Công việc" 
                          FontSize="18" 
                          FontWeight="Bold"
                          Foreground="White" 
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center"
                          Margin="0,15"/>

                <Button Grid.Column="1" 
                        Content="✕" 
                        Width="30" 
                        Height="30" 
                        Background="Transparent" 
                        Foreground="White" 
                        BorderThickness="0"
                        FontSize="16"
                        FontWeight="Bold"
                        Click="CancelButton_Click"
                        Cursor="Hand">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}" 
                                                CornerRadius="15">
                                            <ContentPresenter HorizontalAlignment="Center" 
                                                              VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#33FFFFFF"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <!-- ScrollViewer cho nội dung chính -->
            <ScrollViewer Grid.Row="1" 
                         VerticalScrollBarVisibility="Auto"
                         Margin="0,0,0,20">
                <StackPanel>
                    <!-- Tiêu đề -->
                    <TextBlock Text="Tiêu đề" Style="{StaticResource FormLabel}"/>
                    <Border Style="{StaticResource InputBorder}">
                        <TextBox x:Name="TitleTextBox"
                                 Style="{StaticResource ModernTextBox}"
                                 FontSize="14"/>
                    </Border>

                    <!-- Mô tả -->
                    <TextBlock Text="Mô tả" Style="{StaticResource FormLabel}"/>
                    <Border Style="{StaticResource InputBorder}">
                        <TextBox x:Name="DescriptionTextBox"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 Height="90"
                                 Style="{StaticResource ModernTextBox}"
                                 FontSize="14"
                                 VerticalScrollBarVisibility="Auto"/>
                    </Border>

                    <!-- Ưu tiên -->
                    <TextBlock Text="Ưu tiên" Style="{StaticResource FormLabel}"/>
                    <Border Style="{StaticResource InputBorder}">
                        <Grid>
                            <TextBox x:Name="PriorityTextBox"
                                     Style="{StaticResource ModernTextBox}"
                                     FontSize="14"
                                     IsReadOnly="True"/>
                            <Button Content="🔽" Width="28" Height="28"
                                    Background="#F0F0F0"
                                    BorderThickness="0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Click="ShowPriorityPopup_Click"
                                    Margin="0,0,4,0"
                                    Style="{StaticResource ModernButton}">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="14"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </Grid>
                    </Border>

                    <!-- Deadline Date -->
                    <TextBlock Text="Ngày Deadline (dd/MM/yyyy)" Style="{StaticResource FormLabel}"/>
                    <Border Style="{StaticResource InputBorder}">
                        <Grid>
                            <TextBox x:Name="DeadlineTextBox"
                                     Style="{StaticResource ModernTextBox}"
                                     FontSize="14"
                                     MaxLength="10"
                                     PreviewTextInput="DateTextBox_PreviewTextInput"
                                     TextChanged="DateTextBox_TextChanged"/>
                            <Button Content="📅" Width="28" Height="28"
                                    Background="#F0F0F0"
                                    BorderThickness="0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Click="ShowCalendar_Click"
                                    Margin="0,0,4,0"
                                    Style="{StaticResource ModernButton}">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="14"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </Grid>
                    </Border>

                    <!-- Deadline Time -->
                    <TextBlock Text="Giờ Deadline (HH:mm)" Style="{StaticResource FormLabel}"/>
                    <Border Style="{StaticResource InputBorder}">
                        <Grid>
                            <TextBox x:Name="TimeTextBox"
                                     Style="{StaticResource ModernTextBox}"
                                     FontSize="14"
                                     MaxLength="5"
                                     PreviewTextInput="TimeTextBox_PreviewTextInput"
                                     TextChanged="TimeTextBox_TextChanged"/>
                            <TextBlock Text="HH:mm" VerticalAlignment="Center" HorizontalAlignment="Right" 
                                       Margin="0,0,12,0" Foreground="#888"/>
                        </Grid>
                    </Border>

                    <!-- Reminder -->
                    <TextBlock Text="Nhắc nhở" Style="{StaticResource FormLabel}"/>
                    <Border Style="{StaticResource InputBorder}">
                        <StackPanel Orientation="Vertical">
                            <CheckBox x:Name="EnableReminderCheckBox" 
                                      Content="Bật nhắc nhở" 
                                      Style="{StaticResource ModernCheckBox}"
                                      Checked="ReminderCheckBox_Checked" 
                                      Unchecked="ReminderCheckBox_Unchecked"/>
                            <Grid Margin="0,8,0,0" IsEnabled="{Binding ElementName=EnableReminderCheckBox, Path=IsChecked}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Thời gian:" VerticalAlignment="Center" Margin="0,0,12,0" Foreground="#666"/>
                                <ComboBox x:Name="ReminderOffsetComboBox" 
                                          Grid.Column="1" 
                                          SelectedIndex="0"
                                          Style="{StaticResource ModernComboBox}">
                                    <ComboBoxItem Content="5 phút trước" Tag="5"/>
                                    <ComboBoxItem Content="10 phút trước" Tag="10"/>
                                </ComboBox>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <!-- === PHẦN MỚI: LẶP LẠI === -->
                    <TextBlock Text="Lặp lại" Style="{StaticResource FormLabel}"/>
                    <Border Style="{StaticResource InputBorder}">
                        <StackPanel Orientation="Vertical">
                            <!-- CheckBox để bật/tắt chức năng lặp lại -->
                            <CheckBox x:Name="RepeatTaskCheckBox"
                                      Content="Lặp lại công việc này"
                                      Style="{StaticResource ModernCheckBox}"
                                      Checked="RepeatTaskCheckBox_CheckedOrUnchecked"
                                      Unchecked="RepeatTaskCheckBox_CheckedOrUnchecked"/>

                            <!-- ComboBox để chọn tần suất lặp, chỉ bật khi CheckBox được chọn -->
                            <ComboBox x:Name="RepeatFrequencyComboBox"
                                      Margin="0,8,0,0"
                                      IsEnabled="{Binding ElementName=RepeatTaskCheckBox, Path=IsChecked}"
                                      SelectedIndex="-1"
                                Style="{StaticResource ModernComboBox}">
                                <ComboBoxItem Content="Hàng ngày"/>
                                <ComboBoxItem Content="Hàng tuần"/>
                                <ComboBoxItem Content="Hàng tháng"/>
                            </ComboBox>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </ScrollViewer>

            <!-- Nút hành động -->
            <Grid Grid.Row="2">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="💾 Lưu"
                            Style="{StaticResource ModernButton}"
                            Click="SaveButton_Click"/>
                    <Button Content="❌ Hủy"
                            Style="{StaticResource CancelButton}"
                            Click="CancelButton_Click"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Window>